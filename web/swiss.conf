# rename this file to Swiss.yml and put a ':' in front of 'name' if
# you want to use YAML like in old versions of Catalyst
name Swiss
database 981

<authentication>
    default_realm dbic
    <realms>
        <minimal>
            <credential>
                class Password
                password_field password
                password_type clear
            </credential>
            <store>
                class Minimal
                <users>
                    <88201>
                        password nok
			roles official
			roles participant
                    </88201>
                    <9530101>
                        password Cindy
			roles player
			roles participant
                    </9530101>
                </users>
            </store>
        </minimal>
        <dbic>
            <credential>
                # Note: this first definition would be the same as setting
                # __PACKAGE__->config->{authentication}->{realms}->{dbic}
                #     ->{credential} = 'Password' in lib/MyApp.pm
                #
                # Specify that we are going to do password-based auth
                class Password
                # This is the name of the field in the users table with the
                # password stored in it
                password_field password
                # We are using an unencrypted password for now
                password_type clear
            </credential>
            <store>
                # Use DBIC to retrieve username, password & role information
                class DBIx::Class
                # This is the model object created by Catalyst::Model::DBIC
                # from your schema (you created 'MyApp::Schema::User' but as
                # the Catalyst startup debug messages show, it was loaded as
                # 'MyApp::Model::DB::Users').
                # NOTE: Omit 'MyApp::Model' here just as you would when using
                # '$c->model("DB::Users)'
                user_class DB::Arbiters
                # This is the name of the field in your 'users' table that
                # contains the user's name
                id_field id
		role_relation getrole
		role_field id
            </store>
        </dbic>
        <access>
            <credential>
                class Password
                password_field email
                password_type clear
            </credential>
            <store>
                class DBIx::Class
                user_class DB::Amateur
                id_field email
		role_relation getrole
		role_field email
            </store>
        </dbic>
    </realms>
</authentication>
